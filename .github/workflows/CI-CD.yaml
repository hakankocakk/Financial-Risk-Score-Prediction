name: Financial Risk Score Prediction CI/CD - Production


on:
  push:
    branches:
      - main


  pull_request:
    branches:
      - main


jobs:
    lint:
        runs-on: ubuntu-latest
        #runs-on: ${{matrix.os}}

        #strategy:
          #matrix:
              #os: [ubuntu-latest, windows-latest, macos-latest]
              #python-version: ['3.9', '3.10', '3.11']
    
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11.4'
                  #python-version: ${{matrix.python-version}}

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Run flake8
              run: |
                flake8 --exclude=mlruns,docs .

    unit_test:
        runs-on: ubuntu-latest
        needs: lint
        #runs-on: ${{matrix.os}}

        #strategy:
          #matrix:
              #os: [ubuntu-latest, windows-latest, macos-latest]
              #python-version: ['3.9', '3.10', '3.11']
    
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11.4'
                  #python-version: ${{matrix.python-version}}

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Run unit test
              env:
                DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
              run: |
                pytest tests/

    Production:
        runs-on: ubuntu-latest
        needs: unit_test
        if: contains(github.event.head_commit.message, '[deploy]')
        #runs-on: ${{matrix.os}}

        #strategy:
          #matrix:
              #os: [ubuntu-latest, windows-latest, macos-latest]
              #python-version: ['3.9', '3.10', '3.11']

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11.4'
                  #python-version: ${{matrix.python-version}}

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install mlflow==2.20.3
            
            - name: Promote model to production
              if: success()
              env:
                DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
              run: python scripts/production.py
    
    Docker:
        runs-on: ubuntu-latest
        needs: Production

        steps:
            - name: Log in to DockerHub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN}}
 

            - name: Build Docker Image
              if: ${{ success() }}
              run: |
                docker build -t docker push hakankocak/financial-risk-score-prediction:latest .
 
            - name: Push Docker Image
              if: ${{ success() }}
              run: |
                docker push hakankocak/financial-risk-score-prediction:latest
      



